install.packages("Rcmdr")
library("Rcmdr", lib.loc="C:/Users/jjmedina/Documents/R/win-library/3.1")
detach("package:Rcmdr", unload=TRUE)
install.packages("ggplot2")
install.packages("gmodels")
install.packages("survey")
install.packages("vcd")
install.packages("vcdExtra")
install.packages("sjPlot")
install.packages("Zelig")
install.packages("googleVis")
install.packages("lme4")
install.packages("nlme")
install.packages("randomForest")
install.packages("glmnet")
install.packages("survival")
install.packages("caret")
install.packages("shiny")
install.packages("xtable")
install.packages("sp")
install.packages("maptools")
install.packages("maps")
install.packages("ggmap")
install.packages("devtools")
install.packages("jsonlite")
install.packages("httr")
library("Zelig", lib.loc="C:/Users/jjmedina/Documents/R/win-library/3.1")
detach("package:Zelig", unload=TRUE)
install.packages("JGR")
install.packages("Deducer")
install.packages("DeducerExtras")
library("Rcmdr", lib.loc="C:/Users/jjmedina/Documents/R/win-library/3.1")
library("RcmdrPlugin.EBM", lib.loc="C:/Users/jjmedina/Documents/R/win-library/3.1")
detach("package:Rcmdr", unload=TRUE)
detach("package:RcmdrPlugin.EBM", unload=TRUE)
Points <- c(86, 84, 82, 79, 72, 69, 64, 56, 50, 49, 45, 42, 40, 38, 38, 37, 36, 33, 32, 30)
Team <- factor(c("Man City", "Liverpool", "Chelsea", "Arsenal", "Everton", "Spurs", "Man U", "Southampton", "Stoke City", "Newcastle", "Palace", "Swansea", "West Ham", "Sunderland", "Villa", "Hull", "West Brom", "Nowrwich", "Fulham", "Cardiff"))
PremierLeague13_14 <- data.frame(Team, Points)
View(PremierLeague13_14)
library(foreign, pos=15)
isrd2 <-
read.spss("C:/Users/jjmedina/Dropbox/QuantRes/10 ISRD2 and gangs/Data/Source/subsetsandrine.sav",   use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
colnames(isrd2) <- tolower(colnames(isrd2))
library(plyr)
library(dplyr)
library(ggplot2)
library(gmodels)
df <- select(isrd2, caseid, classid, schoolid, cityid, acountry, cntclst1, qrating,
male, age,
groupfr,grppubl, grpexist, grpillac, grpilldo, grpgang, grpgend, grpmale, grpethn,
frndac01, frndac02, frndac03, frndac04, frndac05,
frndac06, frndac07, frndac08, frndac09, frndacs,
attvio01, attvio02, attvio03, attvio04, attvio05,
delpdr, delpdrn, delpsl, delpsln, delpbu, delpbun, delpex, delpexn, delpas, delpasn,
gfigltp, gfiglyi, gfiglyc,
mproplyp, moofflyp, mtofflyp,
sviollyp, sproplyp, soofflyp, stofflyp,
tviollyp, tproplyp, toofflyp, totallyp,
versly, verslyp, serclyp,
psweight, pweight, fwall, fwlmcity, fwstown,
gang_eurogang, activ05, leissp03, leissp04
)
df$cityid <- droplevels(df$cityid)
table(df$cityid)
levels(df$cityid)
table(df$schoolid)
class(df$schoolid)
df$schoolid_f <- as.factor(df$schoolid)
levels(df$schoolid_f)
table(df$schoolid_f)
library(foreign, pos=15)
isrd2 <-
read.spss("C:/Users/jjmedina/Dropbox/QuantRes/10 ISRD2 and gangs/Data/Source/subsetsandrine.sav",   use.value.labels=TRUE, max.value.labels=Inf, to.data.frame=TRUE)
colnames(isrd2) <- tolower(colnames(isrd2))
library(plyr)
library(dplyr)
library(ggplot2)
library(gmodels)
df <- select(isrd2, caseid, classid, schoolid, cityid, acountry, cntclst1, qrating,
male, age,
groupfr,grppubl, grpexist, grpillac, grpilldo, grpgang, grpgend, grpmale, grpethn,
frndac01, frndac02, frndac03, frndac04, frndac05,
frndac06, frndac07, frndac08, frndac09, frndacs,
attvio01, attvio02, attvio03, attvio04, attvio05,
delpdr, delpdrn, delpsl, delpsln, delpbu, delpbun, delpex, delpexn, delpas, delpasn,
gfigltp, gfiglyi, gfiglyc,
mproplyp, moofflyp, mtofflyp,
sviollyp, sproplyp, soofflyp, stofflyp,
tviollyp, tproplyp, toofflyp, totallyp,
versly, verslyp, serclyp,
psweight, pweight, fwall, fwlmcity, fwstown,
gang_eurogang, activ05, leissp03, leissp04
)
str(df)
df$cityid <- droplevels(df$cityid)
table(df$cityid)
df$acountry <-droplevels(df$acountry)
table(df$acountry)
table(df$schoolid)
length(which(df$schoolid == "NA"))
class(df$schoolid)
df$schoolid_f <- as.factor(df$schoolid)
class(df$schoolid_f)
levels(df$schoolid_f)
table(df$schoolid_f)
df$gang_eurogang  <-  mapvalues(df$gang_eurogang,
from  = c("non gang member", "gang member"),
to  =  c("no", "yes"))
table(df$gang_eurogang)
class(df$gang_eurogang)
library(lcca)
set.seed(123)
df_fit1 <- select(df, acountry, schoolid_f, cityid, groupfr,grppubl,grpillac,grpilldo,grpgang,frndac03,frndac04,frndac05,frndac08, gang_eurogang)
summary(df_fit1)
df_fit1$grpgang[df_fit1$groupfr == "no"] <-NA
levels(df_fit1$frndac03) <- c(levels(df_fit1$frndac03), "yes")
levels(df_fit1$frndac04) <- c(levels(df_fit1$frndac04), "yes")
levels(df_fit1$frndac05) <- c(levels(df_fit1$frndac05), "yes")
levels(df_fit1$frndac08) <- c(levels(df_fit1$frndac08), "yes")
df_fit1$alcdrugs <- df_fit1$frndac03
df_fit1$alcdrugs[df_fit1$frndac03 == "sometimes" | df_fit1$frndac03 == "often" |
df_fit1$frndac03 == "always" ] <- "yes"
df_fit1$alcdrugs <- droplevels(df_fit1$alcdrugs)
df_fit1$vandalism <- df_fit1$frndac04
df_fit1$vandalism[df_fit1$frndac04 == "sometimes" | df_fit1$frndac04 == "often" |
df_fit1$frndac04 == "always" ] <- "yes"
df_fit1$vandalism <- droplevels(df_fit1$vandalism)
df_fit1$shoplifting <- df_fit1$frndac05
df_fit1$shoplifting[df_fit1$frndac05 == "sometimes" | df_fit1$frndac05 == "often" |
df_fit1$frndac05 == "always" ] <- "yes"
df_fit1$shoplifting <- droplevels(df_fit1$shoplifting)
df_fit1$frighten <- df_fit1$frndac08
df_fit1$frighten[df_fit1$frndac08 == "sometimes" | df_fit1$frndac08 == "often" |
df_fit1$frndac08 == "always" ] <- "yes"
df_fit1$frighten <- droplevels(df_fit1$frighten)
table(df$frndac04)
table(df$frighten)
table(df_fit1$frighten)
df_fit1$vandals2 <- df_fit1$frndac04
df_fit1$vandals2[df_fit1$frndac04 == "often" | df_fit1$frndac04 == "always" ] <- "yes"
df_fit1$vandals2[df_fit1$frndac04 == "sometimes"] <- "never"
df_fit1$vandals2 <- droplevels(df_fit1$vandals2)
table(df_fit1$vandals2)
df_fit1$shoplift2 <- df_fit1$frndac05
table(df_fit1$shoplift2)
df_fit1$shoplift2[df_fit1$frndac05 == "often" | df_fit1$frndac05 == "always" ] <- "yes"
table(df_fit1$shoplift2)
df_fit1$shoplift2[df_fit1$frndac05 == "sometimes"] <- "never"
table(df_fit1$shoplift2)
df_fit1$shoplift2 <- droplevels(df_fit1$shoplift2)
table(df_fit1$shoplift2)
df_fit1$frighten2 <- df_fit1$frndac08
table(df_fit1$frighten2)
df_fit1$frighten2[df_fit1$frndac08 == "often" | df_fit1$frndac08 == "always" ] <- "yes"
table(df_fit1$frighten2)
df_fit1$frighten2[df_fit1$frndac08 == "sometimes"] <- "never"
table(df_fit1$frighten2)
df_fit1$frighten2 <- droplevels(df_fit1$frighten2)
table(df_fit1$frighten2)
fit_1 <- lca( cbind(groupfr,grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandalis2,shoplift2,frighten2) ~ 1,
data = df_fit1, nclass = 3)
summary(fit_1)
fit_1 <- lca( cbind(groupfr,grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit1, nclass = 3)
summary(fit_1)
df_fit2 <- filter(df_fit1, groupfr == "yes")
fit_3s <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandalism,shoplifting,frighten) ~ 1,
data = df_fit2, nclass = 3, flatten.gammas = 1, flatten.rhos = 1)
summary(fit_3s)
fit_4s <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandalism,shoplifting,frighten) ~ 1,
data = df_fit2, nclass = 4, flatten.gammas = 1, flatten.rhos = 1)
summary(fit_4s)
fit_3s <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 3, flatten.gammas = 1, flatten.rhos = 1)
summary(fit_3s)
fit_4s <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 4, flatten.gammas = 1, flatten.rhos = 1)
summary(fit_4s)
fit_5s <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 5, flatten.gammas = 1, flatten.rhos = 1)
summary(fit_5s)
summary(fit_4s)
str(fit_4s)
class(fit_4s$param$gamma)
fit_4smg1 <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 4, groups=acountry, constrain.rhos=T, constrain.gammas=T,
flatten.gammas = 1, flatten.rhos = 1)
summary(fit_4smg1)
fit_4smg2 <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 4, groups=acountry, constrain.rhos=T, constrain.gammas=F,
flatten.gammas = 1, flatten.rhos = 1)
compare.fit(fit_4smg1,fit_4smg2)
summary(fit_4smg2)
table(df_fit2$cityid)
fit_4cmg1 <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 4, groups=cityid, constrain.rhos=T, constrain.gammas=T,
flatten.gammas = 1, flatten.rhos = 1)
summary(fit_4cmg1)
fit_4cmg2 <- lca( cbind(grppubl,grpillac,grpilldo,grpgang,
alcdrugs,vandals2,shoplift2,frighten2) ~ 1,
data = df_fit2, nclass = 4, groups=cityid, constrain.rhos=T, constrain.gammas=F,
flatten.gammas = 1, flatten.rhos = 1)
compare.fit(fit_4cmg1,fit_4cmg2)
summary(fit_4cmg2)
str(fit_4cmg2)
fit_4cmg2$param$gamma
class(fit_4cmg2$param$gamma)
prev_city <- fit_4cmg2$param$gamma
class(prev_city)
str(prev_city)
library(reshape2)
exp_1 <- melt(as.data.frame(prev_city))
View(exp_1)
summary(fit_4cmg2)
exp_1$LC <- factor(seq(from = 0, to = 4, by =  1))
exp_1$LC <- factor(seq(from = 1, to = 4, by =  1))
library(dplyr)
exp_2 <- filter(exp_1, LC="3")
exp_2 <- filter(exp_1, LC == "3")
View(exp_2)
rm(exp_2)
partygroups <- filter(exp_1, LC == "3")
partygroups <- filter(exp_1, LC == "3")
dyg <- filter(exp_1, LC == "4")
View(dyg)
View(dyg)
nameorder<-dyg$variable[order(dyg$value)]
dyg$variable <- factor(dyg$variable, levels=nameorder)
ggplot(dyg,
aes(x=value, y=variable)) +
geom_segment(aes(yend=variable), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 1. Gang membership by city (using the LCA model)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
ggplot(dyg,
aes(x=value, y=variable)) +
geom_segment(aes(yend=variable), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 3. Gang membership by city (using the LCA model)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
View(partygroups)
nameorder2<-partygroups$variable[order(partygroups$value)]
partygroups$variable <- factor(partygroups$variable, levels=nameorder2)
ggplot(partygroups,
aes(x=value, y=variable)) +
geom_segment(aes(yend=variable), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 4. Party groups membership by city (using the LCA model)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
save.image("C:/Users/jjmedina/Dropbox/QuantRes/10 ISRD2 and gangs/r/env.RData")
View(dyg)
library(plyr)
library(dplyr)
library(ggplot2)
library(gmodels)
eg_by_city <- ddply(.data=df, .var=c("cityid"), .fun = function(x) {
data.frame(n=nrow(x),
eg.n=nrow(subset(x, gang_eurogang %in%
c("yes"))),
eg.prop=nrow(subset(x, gang_eurogang %in%
c("yes")))/nrow(x)
)})
nameorder<-eg_by_city$cityid[order(eg_by_city$eg.prop)]
ggplot(eg_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 1. Gang membership by city (using the Eurogang definition)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
eg_by_city$cityid <- factor(eg_by_city$cityid, levels=nameorder)
ggplot(eg_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 1. Gang membership by city (using the Eurogang definition)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
View(eg_by_city)
View(df)
nf_by_city <- ddply(.data=df, .var=c("cityid"), .fun = function(x) {
data.frame(n=nrow(x),
eg.n=nrow(subset(x, groupfr %in%
c("no"))),
eg.prop=nrow(subset(x, groupfr %in%
c("no")))/nrow(x)
)})
nameorder<-nf_by_city$cityid[order(nf_by_city$eg.prop)]
nf_by_city$cityid <- factor(nf_by_city$cityid, levels=nameorder)
ggplot(nf_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 5. Proportion of young people without a group of friends") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
View(nf_by_city)
View(dyg)
fix(dyg)
total <- merge(data dyg,data nf_by_city, by="cityid")
total <- merge(dyg, nf_by_city, by="cityid")
View(total)
fix(total)
View(total)
total$yesfriends <- with(total(n-nofriends))
total$yesfriends <- with(total, n-nofriends)
total$ganglcan <- with(total, value*yesfriends)
total$ganglcap <- with(total, (n/ganglcan)*100)
total$ganglcap <- with(total, ganglcan/n)
levels(total$cityid)
total_nf <- filter(total, cityid =! "Paris (Metro-Area) (FR)" | cityid =! "nat.samp. w/o Paris & Strasbourg (FR)")
total_nf <- filter(total, cityid != "Paris (Metro-Area) (FR)" | cityid != "nat.samp. w/o Paris & Strasbourg (FR)")
View(total_nf)
total_nf <- filter(total, cityid != "Paris (Metro-Area) (FR)")
total_nf <- filter(total, cityid != "Paris (Metro-Area) (FR)" & cityid != "nat.samp. w/o Paris & Strasbourg (FR)")
nameorder<-total_nf$ganglcap[order(total_nf$ganglcap)]
total <- merge(dyg, nf_by_city, by="cityid")
total$yesfriends <- with(total, n-nofriends)
total$ganglcan <- with(total, value*yesfriends)
total$ganglcap <- with(total, ganglcan/n)
levels(total$cityid)
total_nf <- filter(total, cityid != "Paris (Metro-Area) (FR)" & cityid != "nat.samp. w/o Paris & Strasbourg (FR)")
nameorder<-total_nf$cityid[order(total_nf$ganglcap)]
View(total_nf)
View(total)
rename(total, c("n" = "yesfriends"))
names(total)[4] <- "yesfriends"
total$yesfriends <- with(total, n-nofriends)
names(total)[4] <- "nofriends"
total$yesfriends <- with(total, n-nofriends)
names(total)[4] <- "n"
names(total)[5] <- "nofriends"
total$yesfriends <- with(total, n-nofriends)
total$ganglcan <- with(total, value*yesfriends)
total$ganglcap <- with(total, ganglcan/n)
levels(total$cityid)
total_nf <- filter(total, cityid != "Paris (Metro-Area) (FR)" & cityid != "nat.samp. w/o Paris & Strasbourg (FR)")
nameorder<-total_nf$cityid[order(total_nf$ganglcap)]
total_nf$cityid <- factor(total_nf$cityid, levels=nameorder)
ggplot(total_nf,
aes(x=ganglcap, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 3. Proportion of gang members (LCA model) by city") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
eg_by_city <- ddply(.data=df, .var=c("cityid"), .fun = function(x) {
data.frame(n=nrow(x),
eg.n=nrow(subset(x, gang_eurogang %in%
c("yes"))),
eg.prop=nrow(subset(x, gang_eurogang %in%
c("yes")))/nrow(x)
)})
nameorder<-eg_by_city$cityid[order(eg_by_city$eg.prop)]
eg_by_city$cityid <- factor(eg_by_city$cityid, levels=nameorder)
ggplot(eg_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 1. Gang membership by city (using the Eurogang definition)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
eg_by_city <- filter(eg_by_city, cityid != "Paris (Metro-Area) (FR)" & cityid != "nat.samp. w/o Paris & Strasbourg (FR)")
ggplot(eg_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 1. Gang membership by city (using the Eurogang definition)") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
total_nfeg <- merge(total_nf, eg_by_city, by="cityid")
View(total_nfeg)
total_nfeg$difgm <- with(total_nfeg, eg.prop.y - ganglcap)
total_nfeg$propegga <- with(total_nfeg, difgm/eg.prop.y)
nameorder<-total_nf$cityid[order(total_nf$propegga)]
nameorder<-total_nf$cityid[order(total_nf$propegga)]
nameorder<-total_nfeg$cityid[order(total_nfeg$propegga)]
total_nfeg$cityid <- factor(totaleg_nf$cityid, levels=nameorder)
total_nfeg$cityid <- factor(total_nfeg$cityid, levels=nameorder)
ggplot(total_nfeg,
aes(x=propegga, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 4. Proportion of EG identified gang members not identified as such by LCA model") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
nameorder<-nf_by_city$cityid[order(nf_by_city$eg.prop)]
nf_by_city$cityid <- factor(nf_by_city$cityid, levels=nameorder)
ggplot(nf_by_city,
aes(x=eg.prop, y=cityid)) +
geom_segment(aes(yend=cityid), xend=0, colour="grey50")+
geom_point(size=3, aes()) +
theme_bw() +
theme(panel.grid.major.y=element_blank()) +
ggtitle("Figure 4. Proportion of young people without a group of friends") +
theme(axis.title.x=element_blank()) +
theme(axis.title.y=element_blank())
install.packages("tufterhandout")
library(tufterhandout)
setwd("~/UoM/LAWS70821")
install.packages("pastecs")
